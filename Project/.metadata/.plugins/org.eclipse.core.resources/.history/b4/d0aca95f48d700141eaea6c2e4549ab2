package com.example.newtimes;

import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.opengles.GL10;
import javax.microedition.khronos.opengles.GL11;

import android.graphics.*;
import android.content.Context;
import android.opengl.GLSurfaceView; //2
//1
class SquareRenderer implements GLSurfaceView.Renderer
{
	
	float z = 0.0f;
	boolean flipped=false;
	float delz_value=.040f;
	float delz = 0.0f;
	float furthestz=-20.0f;

	static float rotAngle=0.0f;
	
	
	public SquareRenderer(boolean useTranslucentBackground, Context zcontext) {
		mTranslucentBackground = useTranslucentBackground;
		this.ñontext = zcontext; //1
		this.mSquare = new Square();
		}
  
	public void onDrawFrame(GL10 gl) {
		gl.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
		gl.glMatrixMode(GL11.GL_MODELVIEW);
		gl.glLoadIdentity();
		if(z<furthestz)
		{
		if(!flipped)
		{
		delz=delz_value;
		flipped=true;
		} else {
		flipped=false;
		}
		} else if(z > -.01f) {
		if(!flipped) {
		delz=-delz_value;
		flipped=true;
		} else {
		flipped=false;
		}
		}
		z=z+delz;
		gl.glTranslatef(0.0f, (float) (Math.sin(mTransY) / 2.0f), z);
		gl.glRotatef(rotAngle, 0, 0, 1.0f);
		rotAngle+=.5f;
		mSquare.draw(gl);
		mTransY += .15f;
		}
public void onSurfaceChanged(GL10 gl, int width, int height) //11
{
gl.glViewport(0, 0, width, height); //12
float ratio = (float) width / height;
gl.glMatrixMode(GL10.GL_PROJECTION); //13
gl.glLoadIdentity();
gl.glFrustumf(-ratio, ratio, -1, 1, 1, 10); //14
}

public void onSurfaceCreated(GL10 gl, EGLConfig config) //15
{
int resid = com.example.newtimes.R.drawable.hedly; //1
mSquare.createTexture(gl, this.ñontext, resid); //2	
 //16
gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, //17
GL10.GL_FASTEST);
gl.glViewport(0, 0, 2, 2);
if (mTranslucentBackground) //18
{
gl.glClearColor(0,0,0,0);
}
else
{gl.glClearColor(1,1,1,1);
}
 //19
gl.glShadeModel(GL10.GL_SMOOTH); //20
gl.glEnable(GL10.GL_DEPTH_TEST); //21


mSquare.createTexture(gl, this.ñontext, resid, true);
if (mSquare.m_UseMipmapping)
{
resid = com.example.newtimes.R.drawable.mipmap128;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap64;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap32;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap16;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap8;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap4;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap2;
mSquare.createTexture(gl, this.ñontext, resid, false);
resid = book.BouncySquare.R.drawable.mipmap1;
mSquare.createTexture(gl, this.ñontext, resid, false);
}

}
private boolean mTranslucentBackground;
private Square mSquare;
private float mTransY;
private float mTransX;
private float mAngletwo;
private float mAngle;
}